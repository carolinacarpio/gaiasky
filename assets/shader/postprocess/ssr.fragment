// Screen Space Reflections shader by Toni Sagrista
// License: MPL2
#version 330 core

#include shader/lib_logdepthbuff.glsl

// Color buffer
uniform sampler2D u_texture0;
// Depth buffer
uniform sampler2D u_texture1;
// Normal buffer
uniform sampler2D u_texture2;
// Reflection mask
uniform sampler2D u_texture3;

// Z-far and K values for depth buffer
//uniform vec2 u_zfark;

in vec2 v_texCoords;
layout (location = 0) out vec4 fragColor;

void main(void)
{
    vec3 col = texture(u_texture0, v_texCoords).xyz;
    vec3 depth = texture(u_texture1, v_texCoords).xyz;
    vec3 normal = texture(u_texture2, v_texCoords).xyz;
    vec3 reflectionMask = texture(u_texture3, v_texCoords).xyz;

    //float z = 1.0 / recoverWValue(depth.r, u_zfark.x, u_zfark.y);

    fragColor = vec4(reflectionMask * normal + (1.0 - reflectionMask.x) * col, 1.0);
    //fragColor = vec4(z, z, z, 1.0);
}