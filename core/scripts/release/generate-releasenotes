#!/bin/bash

# This script generates the releasenotes.txt file that goes with
# every release

# Utils dir, with a relative path core/utils/ to the root gaiasky directory
UTILSDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
if [ -z "$GS" ]; then
  GSDIR=`realpath $UTILSDIR/../../../`
else
  GSDIR="$GS"
fi

if [[ $# -ne 2 ]]; then
    echo "Usage: $0 VERSION OUTPUT"
    echo
    echo "$0: Must provide a version (tag) number and an output file."
    exit -1
fi

# The current tag
CURRENT_TAG=$1
OUTPUT=$2
RELEASENOTES=$GSDIR/releasenotes.txt

echo "Creating release notes: $CURRENT_TAG"
# Test tag for regexp, if it does not fit, use $RELEASENOTES if it exists
RE="^([0-9]+\.)?([0-9]+\.)?([0-9]+)(-rc[0-9]+)?$"

if [[ -e $RELEASENOTES ]]; then
    # If $GS/releasenotes.txt exists, use it
    echo "$GSDIR/releasenotes.txt -> $OUTPUT"
    cp $GSDIR/releasenotes.txt $OUTPUT
else
  if [[ ! $CURRENT_TAG =~ $RE ]]; then
      echo "Tag $CURRENT_TAG does not match $RE, trying to use $RELEASENOTES"
  else
      # Use regexp to match x.y.z[-rcww]
      echo "git-chglog -> $OUTPUT"
      git-chglog --tag-filter-pattern '^(\d+\.)?(\d+\.)?(\*|\d+)?(-rc\d+)?$' --config $GSDIR/.chglog/config.rn.yml -o $OUTPUT $CURRENT_TAG

      # Remove duplicate lines
      awk '!seen[$0]++' $OUTPUT > $OUTPUT.bak
      mv $OUTPUT.bak $OUTPUT
      # Add line break before '#'
      sed -z 's/\n#/\n\n#/g' $OUTPUT > $OUTPUT.bak
      mv $OUTPUT.bak $OUTPUT

      echo "File saved to $OUTPUT"
  fi
fi
echo "Done"
